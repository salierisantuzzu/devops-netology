Домашнее задание к занятию "6.3. MySQL".
********************************************************************************

Введение
Перед выполнением задания вы можете ознакомиться с дополнительными материалами.
********************************************************************************


Задача 1.
*********
- Используя docker поднимите инстанс MySQL (версию 8). Данные БД сохраните в
volume.
-----------------------------
version: "3"
    
services:
  mysql_daten:
    image: mysql:8
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: secret
#      MYSQL_DATABASE: my_db
#      MYSQL_USER: adm_user
#      MYSQL_PASSWORD: my_pass
    volumes:
      - ../mysql_daten:/var/lib/mysql
    ports:
      - 3306:3306

volumes:
  mysql_daten:
-----------------------------

- Изучите бэкап БД и восстановитесь из него.
- Перейдите в управляющую консоль mysql внутри контейнера.
- Подключитесь к восстановленной БД и получите список таблиц из этой БД.

-----------------------------
cd /tmp
nano /test_dump.sql
-----------------------------

-----------------------------
mysql -u root -p

-----------------------------
mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
4 rows in set (0.02 sec)
-----------------------------

-----------------------------
CREATE DATABASE test_db;

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| sys                |
| test_db            |
+--------------------+
5 rows in set (0.00 sec)
-----------------------------

-----------------------------
mysql> use test_db;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
-----------------------------

-----------------------------
source /tmp/test_dump.sql
-----------------------------

-----------------------------
mysql> show tables;
+-------------------+
| Tables_in_test_db |
+-------------------+
| orders            |
+-------------------+
1 row in set (0.00 sec)
-----------------------------

-----------------------------
mysql> select * from orders;
+----+-----------------------+-------+
| id | title                 | price |
+----+-----------------------+-------+
|  1 | War and Peace         |   100 |
|  2 | My little pony        |   500 |
|  3 | Adventure mysql times |   300 |
|  4 | Server gravity falls  |   300 |
|  5 | Log gossips           |   123 |
+----+-----------------------+-------+
5 rows in set (0.00 sec)
-----------------------------

- Используя команду \h получите список управляющих команд.

-----------------------------
mysql>\h

Скрин - 01_01.png
-----------------------------


- Найдите команду для выдачи статуса БД и приведите в ответе из ее вывода версию
сервера БД.

-----------------------------
mysql> \s
--------------
mysql  Ver 8.0.25 for Linux on x86_64 (MySQL Community Server - GPL)

Connection id:		14
Current database:	test_db
Current user:		root@localhost
SSL:			Not in use
Current pager:		stdout
Using outfile:		''
Using delimiter:	;
Server version:		8.0.25 MySQL Community Server - GPL
Protocol version:	10
Connection:		Localhost via UNIX socket
Server characterset:	utf8mb4
Db     characterset:	utf8mb4
Client characterset:	latin1
Conn.  characterset:	latin1
UNIX socket:		/var/run/mysqld/mysqld.sock
Binary data as:		Hexadecimal
Uptime:			25 min 59 sec

Threads: 2  Questions: 93  Slow queries: 0  Opens: 199  Flush tables: 3  Open tables: 115  Queries per second avg: 0.059
--------------
-----------------------------


- Приведите в ответе количество записей с price > 300.

-----------------------------
mysql> select * from orders where price > 300;
+----+----------------+-------+
| id | title          | price |
+----+----------------+-------+
|  2 | My little pony |   500 |
+----+----------------+-------+
1 row in set (0.00 sec)
-----------------------------

В следующих заданиях мы будем продолжать работу с данным контейнером.

********************************************************************************

Задача 2.
*********
Создайте пользователя test в БД c паролем test-pass, используя:

    - плагин авторизации mysql_native_password

nano /etc/mysql/my.cnf
[mysqld]
default_authentication_plugin = mysql_native_password

mysql -u root -p

-----------------------------
mysql> CREATE USER 'test'@'localhost' IDENTIFIED WITH mysql_native_password BY 'my_password';
Query OK, 0 rows affected (0.02 sec)
-----------------------------

-----------------------------
mysql> SHOW GRANTS FOR 'test'@'localhost';
+------------------------------------------+
| Grants for test@localhost                |
+------------------------------------------+
| GRANT USAGE ON *.* TO `test`@`localhost` |
+------------------------------------------+
1 row in set (0.00 sec)
-----------------------------

-----------------------------
mysql> GRANT ALL PRIVILEGES ON test_db.* TO 'test'@'localhost';
Query OK, 0 rows affected, 1 warning (0.01 sec)
-----------------------------

-----------------------------
mysql> SHOW GRANTS FOR 'test'@'localhost';
+-----------------------------------------------------------+
| Grants for test@localhost                                 |
+-----------------------------------------------------------+
| GRANT USAGE ON *.* TO `test`@`localhost`                  |
| GRANT ALL PRIVILEGES ON `test_db`.* TO `test`@`localhost` |
+-----------------------------------------------------------+
2 rows in set (0.00 sec)
-----------------------------


    - срок истечения пароля - 180 дней
-----------------------------
mysql> ALTER USER 'test'@'localhost' PASSWORD EXPIRE INTERVAL 180 DAY;
Query OK, 0 rows affected (0.01 sec)
-----------------------------

    - количество попыток авторизации - 3

ALTER USER 'test'@'localhost' WITH FAILED_LOGIN_ATTEMPTS 3;

    - максимальное количество запросов в час - 100
-----------------------------
mysql> ALTER USER 'test'@'localhost' WITH MAX_QUERIES_PER_HOUR 100;
Query OK, 0 rows affected (0.03 sec)
-----------------------------


    - аттрибуты пользователя:
        Фамилия "Pretty"
        Имя "James"

Предоставьте привелегии пользователю test на операции SELECT базы test_db.

Используя таблицу INFORMATION_SCHEMA.USER_ATTRIBUTES получите данные по
пользователю test и приведите в ответе к задаче.

********************************************************************************

Задача 3.
*********

Установите профилирование SET profiling = 1. Изучите вывод профилирования команд SHOW PROFILES;.

Исследуйте, какой engine используется в таблице БД test_db и приведите в ответе.

Измените engine и приведите время выполнения и запрос на изменения из профайлера в ответе:

    на MyISAM
    на InnoDB

********************************************************************************

Задача 4.
*********

Изучите файл my.cnf в директории /etc/mysql.

Измените его согласно ТЗ (движок InnoDB):

    Скорость IO важнее сохранности данных
    Нужна компрессия таблиц для экономии места на диске
    Размер буффера с незакомиченными транзакциями 1 Мб
    Буффер кеширования 30% от ОЗУ
    Размер файла логов операций 100 Мб

Приведите в ответе измененный файл my.cnf.

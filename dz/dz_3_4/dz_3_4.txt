Домашнее задание к занятию "3.4. Операционные системы, лекция 2".
********************************************************************************

1. На лекции мы познакомились с node_exporter. В демонстрации его исполняемый
файл запускался в background. Этого достаточно для демо, но не для настоящей
production-системы, где процессы должны находиться под внешним управлением.
Используя знания из лекции по systemd, создайте самостоятельно простой unit-файл
для node_exporter:
    поместите его в автозагрузку,
    предусмотрите возможность добавления опций к запускаемому процессу через
    внешний файл (посмотрите, например, на systemctl cat cron),
    удостоверьтесь, что с помощью systemctl процесс корректно стартует,
    завершается, а после перезагрузки автоматически поднимается.

Скрины - 01_01.png - 01_05.png
********************************************************************************

2. Ознакомьтесь с опциями node_exporter и выводом /metrics по-умолчанию.
Приведите несколько опций, которые вы бы выбрали для базового мониторинга хоста
по CPU, памяти, диску и сети.

Несколько опций:
node_cpu_seconds_total
node_pressure_cpu_waiting_seconds_total
process_cpu_seconds_total
node_boot_time_seconds
node_memory_Percpu_bytes
node_memory_MemTotal_bytes
node_memory_MemFree_bytes
node_memory_SwapTotal_bytes
node_memory_SwapFree_bytes
node_memory_SwapCached_bytes
node_memory_Active_bytes
node_memory_Inactive_bytes
node_disk_io_now
node_disk_io_time_seconds_total
node_disk_read_time_seconds_total
node_disk_reads_completed_total
node_disk_write_time_seconds_total
node_disk_writes_completed_total
node_network_info
node_network_iface_id
node_network_speed_bytes
node_network_up
node_netstat_Tcp_ActiveOpens
node_netstat_Tcp_PassiveOpens
node_netstat_Ip_Forwarding
node_network_transmit_packets_total
node_netstat_Udp_InDatagrams
node_netstat_Udp_OutDatagrams

Скрин - 02_01.png 02_02.png
********************************************************************************

3. Установите в свою виртуальную машину Netdata. Воспользуйтесь готовыми пакетами
для установки (sudo apt install -y netdata). После успешной установки:
    в конфигурационном файле /etc/netdata/netdata.conf в секции [web] замените
    значение с localhost на bind to = 0.0.0.0,
    добавьте в Vagrantfile проброс порта Netdata на свой локальный компьютер и
    сделайте vagrant reload:
config.vm.network "forwarded_port", guest: 19999, host: 19999
После успешной перезагрузки в браузере на своем ПК (не в виртуальной машине) вы
должны суметь зайти на localhost:19999. Ознакомьтесь с метриками, которые по
умолчанию собираются Netdata и с комментариями, которые даны к этим метрикам.

Скрин - 03_01.png
PDF 03_02_vm-vagrant netdata dashboard.pdf
********************************************************************************

4. Можно ли по выводу dmesg понять, осознает ли ОС, что загружена не на
настоящем оборудовании, а на системе виртуализации?

Понимает.
sudo dmesg | grep -i virtual
[    0.000000] DMI: innotek GmbH VirtualBox/VirtualBox, BIOS VirtualBox 12/01/2006
[    0.001187] CPU MTRRs all blank - virtualized system.
[    0.062467] Booting paravirtualized kernel on KVM
[    3.452265] systemd[1]: Detected virtualization oracle.

Скрин - 04_01.png
********************************************************************************

5. Как настроен sysctl fs.nr_open на системе по-умолчанию? Узнайте, что означает
этот параметр. Какой другой существующий лимит не позволит достичь такого числа
(ulimit --help)?

-n	the maximum number of open file descriptors
-x	the maximum number of file locks

vagrant@vm-vagrant:~$ sudo sysctl fs.nr_open
fs.nr_open = 1048576
vagrant@vm-vagrant:~$ sudo sysctl -x fs.nr_open
fs.nr_open = 1048576
vagrant@vm-vagrant:~$ sudo cat /proc/sys/fs/nr_open
1048576
********************************************************************************

6. Запустите любой долгоживущий процесс (не ls, который отработает мгновенно, а,
например, sleep 1h) в отдельном неймспейсе процессов; покажите, что ваш процесс
работает под PID 1 через nsenter. Для простоты работайте в данном задании под
root (sudo -i). Под обычным пользователем требуются дополнительные опции
(--map-root-user) и т.д.

vagrant ssh
vagrant@vm-vagrant:~$ tty
/dev/pts/0
vagrant@vm-vagrant:~$ sudo -i
root@vm-vagrant:~# tty
/dev/pts/0
root@vm-vagrant:~# screen
root@vm-vagrant:~# tty
/dev/pts/1
root@vm-vagrant:~# unshare -f --pid --mount-proc sleep 1h

vagrant ssh
vagrant@vm-vagrant:~$ tty
/dev/pts/2
vagrant@vm-vagrant:~$ sudo -i
root@vm-vagrant:~# tty
/dev/pts/2
root@vm-vagrant:~# ps aux
USER         PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
root           1  0.3  0.2 102184 11652 ?        Ss   14:06   0:01 /sbin/init
root           2  0.0  0.0      0     0 ?        S    14:06   0:00 [kthreadd]
root           3  0.0  0.0      0     0 ?        I<   14:06   0:00 [rcu_gp]
root           4  0.0  0.0      0     0 ?        I<   14:06   0:00 [rcu_par_gp]
...
root        1429  0.0  0.0   8080   592 pts/1    S+   14:09   0:00 unshare -f --pid --m
root        1430  0.0  0.0   8076   592 pts/1    S+   14:09   0:00 sleep 1h
root@vm-vagrant:~# nsenter --target 1430 --pid --mount
root@vm-vagrant:/# ps aux
USER         PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
root           1  0.0  0.0   8076   592 pts/1    S+   14:09   0:00 sleep 1h
root           2  0.0  0.0   9836  3960 pts/2    S    14:12   0:00 -bash
root          11  0.0  0.0  11492  3272 pts/2    R+   14:12   0:00 ps aux
root@vm-vagrant:/#

Скрин - 06_01.png
********************************************************************************

7. Найдите информацию о том, что такое :(){ :|:& };:. Запустите эту команду в
своей виртуальной машине Vagrant с Ubuntu 20.04 (это важно, поведение в других
ОС не проверялось). Некоторое время все будет "плохо", после чего (минуты) – ОС
должна стабилизироваться. Вызов dmesg расскажет, какой механизм помог
автоматической стабилизации. Как настроен этот механизм по-умолчанию, и как
изменить число процессов, которое можно создать в сессии?

Это определяет функцию с именем : , которая вызывает себя дважды (код: : | : ).
она делает это в фоновом режиме ( & ). после ; определение функции выполняется и
функция : запускается.

По-умолчанию:
vagrant@vm-vagrant:~$ sudo cat /sys/fs/cgroup/pids/user.slice/user-1000.slice/pids.max
10163
vagrant@vm-vagrant:~$ sudo cat /sys/fs/cgroup/pids/user.slice/user-1000.slice/pids.current
7

Изменить:
sudo nano /usr/lib/systemd/system/user-.slice.d/10-defaults.conf

[Slice]
TasksMax=33%
на
[Slice]
TasksMax=50%

vagrant@vm-vagrant:~$ sudo systemctl daemon-reload
vagrant@vm-vagrant:~$ sudo cat /sys/fs/cgroup/pids/user.slice/user-1000.slice/pids.max
15399
vagrant@vm-vagrant:~$ sudo cat /sys/fs/cgroup/pids/user.slice/user-1000.slice/pids.current
7
********************************************************************************

Домашнее задание к занятию "4.1. Командная оболочка Bash: Практические навыки"
********************************************************************************

1. Есть скрипт:

    a=1
    b=2
    c=a+b
    d=$a+$b
    e=$(($a+$b))

Какие значения переменным c,d,e будут присвоены?
Почему?

$ echo $a
1
$ echo $b
2
$ echo $c
a+b
$ echo $d
1+2
$ echo $e
3

a == 1 (строковое значение). В bash все переменные строки, заданные в неявном
виде. Выводит как текст;
b == 2 (строковое значение). В bash все переменные строки, заданные в неявном
виде. Выводит как текст;
c == a+b (строковое значение). Воспринимается bash как текст. Выводит как текст;
d == 1+2 (строковое значение). bash интерпретирует как текст значение переменной
a, знак + и значение переменной b. Выводит как текст;
e == 3 (Целое число). bash интерпретирует значение переменных a и b как целое
число. Производится операция сложения целых чисел. Выводит как целое число.
********************************************************************************

2. На нашем локальном сервере упал сервис и мы написали скрипт, который
постоянно проверяет его доступность, записывая дату проверок до тех пор, пока
сервис не станет доступным. В скрипте допущена ошибка, из-за которой выполнение
не может завершиться, при этом место на Жёстком Диске постоянно уменьшается. Что
необходимо сделать, чтобы его исправить:

while ((1==1)
do
curl https://localhost:4757
if (($? != 0))
then
date >> curl.log
fi
done

    а) Пропущена вторая закрывающая скобка в условии цикла while.
        ((1==1) вместо ((1==1)). Скрин 02_01.png;
    б) Цикл не имеет условия выхода (бесконечный цикл). 1==1 будет постоянно
        давать True.

Для выхода при доступности сервиса можно сделать так:

while true
do
curl https://localhost:4757
if (($? !=0))
then
date >> curl.log
else break
fi
done

Проверял на (curl -I https://www.google.com)

********************************************************************************

3. Необходимо написать скрипт, который проверяет доступность трёх IP:
192.168.0.1, 173.194.222.113, 87.250.250.242 по 80 порту и записывает результат
в файл log. Проверять доступность необходимо пять раз для каждого узла.

-----

#!/bin/env bash
# FILENAME test_ip.sh
# LOGFILE test_ip.log

n=(1 2 3 4 5)
host1=192.168.0.1
host2=173.194.222.113
host3=87.250.250.242
port=80

echo "Проверка доступности IP: $host1, $host2, $host3 по $port порту"

for (( i=0; i < 5; i++ ))
do

echo "***" >> test_ip.log
date +%Y-%m-%d_%T >> test_ip.log
echo "Проверка ${n[$i]}" >> test_ip.log

curl -Is -m 1 $host1:$port > /dev/null
if (($? == 0))
then
echo "host $host1:$port доступен" >> test_ip.log
else
echo "host $host1:$port не доступен"  >> test_ip.log
fi

curl -Is -m 1 $host2:$port > /dev/null
if (($? == 0))
then
echo "host $host2:$port доступен" >> test_ip.log
else
echo "host $host2:$port не доступен" >> test_ip.log
fi

curl -Is -m 1 $host3:$port > /dev/null
if (($? == 0))
then
echo "host $host3:$port доступен" >> test_ip.log
else
echo "host $host3:$port не доступен" >> test_ip.log
fi

done
echo "Проверка выполнена. Результаты можно просмотреть в файле test_ip.log"

-----

Скрин - 03_01.png

********************************************************************************

4. Необходимо дописать скрипт из предыдущего задания так, чтобы он выполнялся до
тех пор, пока один из узлов не окажется недоступным. Если любой из узлов
недоступен - IP этого узла пишется в файл error, скрипт прерывается.

-----

#!/bin/env bash
# FILENAME test_ip_err.sh
# LOGFILE error.log

host1=192.168.0.1
host2=173.194.222.113
host3=87.250.250.242
port=80

echo "Проверка доступности IP: $host1, $host2, $host3 по $port порту"

for (( i=0; ; i++ ))
do

curl -Is -m 1 $host1:$port > /dev/null
if (($? != 0))
then
echo "host $host1 не доступен"  >> error.log & break
fi

curl -Is -m 1 $host2:$port > /dev/null
if (($? != 0))
then
echo "host $host2 не доступен" >> error.log & break
fi

curl -Is -m 1 $host3:$port > /dev/null
if (($? != 0))
then
echo "host $host3 не доступен" >> error.log & break
fi

done
date +%Y-%m-%d_%T >> error.log
echo "Проверка №$i" >> error.log
echo "Проверка выполнена. Недоступный хост можно просмотреть в файле error.log"

-----

Скрин - 04_01.png
********************************************************************************

Домашнее задание к занятию "5.3. Контейнеризация на примере Docker"
********************************************************************************


Задача 1.
Посмотрите на сценарий ниже и ответьте на вопрос: "Подходит ли в этом сценарии
использование докера? Или лучше подойдет виртуальная машина, физическая машина?
Или возможны разные варианты?"
Детально опишите и обоснуйте свой выбор.

--
Сценарий:

    - Высоконагруженное монолитное java веб-приложение;
    Подходит использование докера. Можно использовать как на виртуальной машине,
    так и на физической.
    
    - Go-микросервис для генерации отчетов;
    Подходит использование докера. Хорошая практика - использование отдельных
    контейнеров для отдельных сервисов.
    
    - Nodejs веб-приложение;
    Подходит использование докера. Хорошая практика - использование отдельных
    контейнеров для отдельных сервисов.
    
    - Мобильное приложение c версиями для Android и iOS;
    Подходит использование докера. Подойдёт и виртуальная машина с контейнерами
    под различные версии.
    
    - База данных postgresql используемая, как кэш;
    Для БД рекоммендуется использовать физические машины, т.к. существует риск
    потерять данные.
    
    - Шина данных на базе Apache Kafka;
    Подходит использование докера. 
    
    - Очередь для Logstash на базе Redis;
    Подходит использование докера.
    
    - Elastic stack для реализации логирования продуктивного веб-приложения -
    три ноды elasticsearch, два logstash и две ноды kibana;
    Подходит использование докера. Можно использовать на виртуальной машине.
    Для каждого процесса свой контейнер.
    
    - Мониторинг-стек на базе prometheus и grafana;
    Подходит использование докера. Можно использовать как на виртуальной машине,
    так и на физической.
    
    - Mongodb, как основное хранилище данных для java-приложения;
    Подходит использование докера, но в тестовых целях. Для БД рекоммендуется
    использовать физические машины, т.к. существует риск потерять данные.
        
    - Jenkins-сервер.
    Подходит использование докера. 

********************************************************************************

Задача 2.
Сценарий выполения задачи:

    создайте свой репозиторий на докерхаб;
    Скрин 02_01.png
    
    выберете любой образ, который содержит апачи веб-сервер;
    Скрины 02_02.png, 02_03.png
    
    создайте свой форк образа;
    Скрин 02_04.png
    
    реализуйте функциональность: запуск веб-сервера в фоне с индекс-страницей,
    содержащей HTML-код ниже:
--

<html>
<head>
Hey, Netology
</head>
<body>
<h1>I’m kinda DevOps now</h1>
</body>
</html>
--
    Скрин 02_05.png, 02_06.png


Опубликуйте созданный форк в своем репозитории и предоставьте ответ в виде
ссылки на докерхаб-репо.

https://hub.docker.com/r/salierisantuzzu/netology/tags?page=1&ordering=last_updated

********************************************************************************

Задача 3.
    - Запустите первый контейнер из образа centos c любым тэгом в фоновом режиме,
    подключив папку info из текущей рабочей директории на хостовой машине в
    /share/info контейнера;
    - Запустите второй контейнер из образа debian:latest в фоновом режиме,
    подключив папку info из текущей рабочей директории на хостовой машине в
    /info контейнера;
    
    Скрин 03_01.png
    
    - Подключитесь к первому контейнеру с помощью exec и создайте текстовый файл
    любого содержания в /share/info;
    
    Скрин 03_02.png
    
    - Добавьте еще один файл в папку info на хостовой машине;
    
    Скрин 03_03.png
    
    - Подключитесь во второй контейнер и отобразите листинг и содержание файлов
    в /info контейнера.
    
    Скрин 03_04.png

********************************************************************************
